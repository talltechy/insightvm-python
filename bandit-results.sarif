{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Bandit",
          "organization": "PyCQA",
          "rules": [
            {
              "id": "B404",
              "name": "blacklist",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-78"
                ],
                "precision": "high"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess"
            },
            {
              "id": "B103",
              "name": "set_bad_file_permissions",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-732"
                ],
                "precision": "high"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b103_set_bad_file_permissions.html"
            },
            {
              "id": "B607",
              "name": "start_process_with_partial_path",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-78"
                ],
                "precision": "high"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html"
            },
            {
              "id": "B603",
              "name": "subprocess_without_shell_equals_true",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-78"
                ],
                "precision": "high"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html"
            },
            {
              "id": "B106",
              "name": "hardcoded_password_funcarg",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-259"
                ],
                "precision": "medium"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b106_hardcoded_password_funcarg.html"
            },
            {
              "id": "B101",
              "name": "assert_used",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-703"
                ],
                "precision": "high"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html"
            },
            {
              "id": "B105",
              "name": "hardcoded_password_string",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-259"
                ],
                "precision": "medium"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b105_hardcoded_password_string.html"
            }
          ],
          "version": "1.8.6",
          "semanticVersion": "1.8.6"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2025-10-13T20:15:33Z"
        }
      ],
      "properties": {
        "metrics": {
          "_totals": {
            "loc": 8567,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "SEVERITY.LOW": 171,
            "CONFIDENCE.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "CONFIDENCE.MEDIUM": 11,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.HIGH": 161
          },
          "./src/__init__.py": {
            "loc": 5,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/paloalto/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/paloalto/api_pa_xdr.py": {
            "loc": 292,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/paloalto/api_pa_xdr_auth.py": {
            "loc": 48,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/__init__.py": {
            "loc": 29,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/__init__.py": {
            "loc": 9,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/asset_groups.py": {
            "loc": 250,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/assets.py": {
            "loc": 210,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/base.py": {
            "loc": 195,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/reports.py": {
            "loc": 415,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/scan_engines.py": {
            "loc": 428,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/scan_templates.py": {
            "loc": 475,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/scans.py": {
            "loc": 479,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/sites.py": {
            "loc": 393,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/solutions.py": {
            "loc": 328,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/sonar_queries.py": {
            "loc": 182,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/users.py": {
            "loc": 591,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/vulnerabilities.py": {
            "loc": 611,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/api/vulnerability_exceptions.py": {
            "loc": 389,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/auth.py": {
            "loc": 106,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/client.py": {
            "loc": 181,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/config.py": {
            "loc": 220,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/constants.py": {
            "loc": 45,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/tools/create_sonar_queries.py": {
            "loc": 325,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/tools/install_insight_agent.py": {
            "loc": 255,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 7,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 8
          },
          "./src/rapid7/tools/install_scan_assistant.py": {
            "loc": 436,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 24,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 24
          },
          "./src/rapid7/tools/site_management.py": {
            "loc": 229,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./src/rapid7/ui.py": {
            "loc": 324,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./tests/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./tests/conftest.py": {
            "loc": 212,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 3,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 2
          },
          "./tests/test_api_standardization.py": {
            "loc": 233,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./tests/test_auth.py": {
            "loc": 115,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 34,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 5,
            "CONFIDENCE.HIGH": 29
          },
          "./tests/test_client.py": {
            "loc": 121,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 48,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 5,
            "CONFIDENCE.HIGH": 43
          },
          "./tests/test_rapid7/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "./tests/test_rapid7/test_assets.py": {
            "loc": 233,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 26,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 26
          },
          "./tests/test_rapid7/test_base.py": {
            "loc": 203,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 29,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 29
          }
        }
      },
      "results": [
        {
          "message": {
            "text": "Consider possible security implications associated with the subprocess module."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "import subprocess\n"
                  },
                  "endColumn": 18,
                  "endLine": 19,
                  "startColumn": 1,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "import os\nimport subprocess\nimport sys\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B404",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Chmod setting a permissive mask 0o755 on file (filepath)."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    os.chmod(filepath, 0o755)\n"
                  },
                  "endColumn": 30,
                  "endLine": 54,
                  "startColumn": 5,
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \"\"\"\n    os.chmod(filepath, 0o755)\n\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B103",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 66,
                  "startColumn": 18,
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        result = subprocess.run(\n            [\"sudo\", \"service\", \"ir_agent\", \"status\"],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n        return result.returncode == 0\n"
                  },
                  "endLine": 71,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 66,
                  "startColumn": 18,
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        result = subprocess.run(\n            [\"sudo\", \"service\", \"ir_agent\", \"status\"],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n        return result.returncode == 0\n"
                  },
                  "endLine": 71,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            result = subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 75,
                  "startColumn": 22,
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            result = subprocess.run(\n                [\"sudo\", \"systemctl\", \"status\", \"ir_agent\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n            return result.returncode == 0\n"
                  },
                  "endLine": 80,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            result = subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 75,
                  "startColumn": 22,
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            result = subprocess.run(\n                [\"sudo\", \"systemctl\", \"status\", \"ir_agent\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n            return result.returncode == 0\n"
                  },
                  "endLine": 80,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 140,
                  "startColumn": 18,
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        result = subprocess.run(\n            [\"sudo\", installer_path, \"install_start\", \"--token\", token],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n\n"
                  },
                  "endLine": 145,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 140,
                  "startColumn": 18,
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_insight_agent.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        result = subprocess.run(\n            [\"sudo\", installer_path, \"install_start\", \"--token\", token],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n\n"
                  },
                  "endLine": 145,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Consider possible security implications associated with the subprocess module."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "import subprocess\n"
                  },
                  "endColumn": 18,
                  "endLine": 19,
                  "startColumn": 1,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "import os\nimport subprocess\nimport sys\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B404",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 40,
                  "startColumn": 9,
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"dpkg\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"deb\"\n"
                  },
                  "endLine": 45,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 40,
                  "startColumn": 9,
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"dpkg\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"deb\"\n"
                  },
                  "endLine": 45,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"rpm\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"rpm\"\n"
                  },
                  "endLine": 56,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"rpm\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"rpm\"\n"
                  },
                  "endLine": 56,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"ping\", \"-c\", \"1\", \"rapid7.com\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL,\n            timeout=5\n        )\n        return True\n"
                  },
                  "endLine": 78,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"ping\", \"-c\", \"1\", \"rapid7.com\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL,\n            timeout=5\n        )\n        return True\n"
                  },
                  "endLine": 78,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            subprocess.run(\n                [\"ping\", \"-c\", \"1\", \"1.1.1.1\"],\n                check=True,\n                stdout=subprocess.DEVNULL,\n                stderr=subprocess.DEVNULL,\n                timeout=5\n            )\n            return True\n"
                  },
                  "endLine": 88,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            subprocess.run(\n                [\"ping\", \"-c\", \"1\", \"1.1.1.1\"],\n                check=True,\n                stdout=subprocess.DEVNULL,\n                stderr=subprocess.DEVNULL,\n                timeout=5\n            )\n            return True\n"
                  },
                  "endLine": 88,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 102,
                  "startColumn": 9,
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"wget\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"wget\"\n"
                  },
                  "endLine": 107,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 102,
                  "startColumn": 9,
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"wget\", \"--version\"],\n            check=True,\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL\n        )\n        return \"wget\"\n"
                  },
                  "endLine": 107,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 111,
                  "startColumn": 13,
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            subprocess.run(\n                [\"curl\", \"--version\"],\n                check=True,\n                stdout=subprocess.DEVNULL,\n                stderr=subprocess.DEVNULL\n            )\n            return \"curl\"\n"
                  },
                  "endLine": 116,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 111,
                  "startColumn": 13,
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            subprocess.run(\n                [\"curl\", \"--version\"],\n                check=True,\n                stdout=subprocess.DEVNULL,\n                stderr=subprocess.DEVNULL\n            )\n            return \"curl\"\n"
                  },
                  "endLine": 116,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(download_cmd + [file_url], check=True)\n"
                  },
                  "endColumn": 62,
                  "endLine": 179,
                  "startColumn": 9,
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            ui.print_info(f\"Downloading {file_name}...\")\n        subprocess.run(download_cmd + [file_url], check=True)\n\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(download_cmd + [checksum_url], check=True)\n"
                  },
                  "endColumn": 66,
                  "endLine": 183,
                  "startColumn": 9,
                  "startLine": 183
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            ui.print_info(\"Downloading checksum...\")\n        subprocess.run(download_cmd + [checksum_url], check=True)\n\n"
                  },
                  "endLine": 184,
                  "startLine": 182
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 217,
                  "startColumn": 18,
                  "startLine": 216
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Calculate checksum\n        result = subprocess.run(\n            ['sha512sum', file_name],\n            stdout=subprocess.PIPE,\n            check=True,\n            text=True\n        )\n        calculated = result.stdout.split()[0]\n"
                  },
                  "endLine": 222,
                  "startLine": 215
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        result = subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 217,
                  "startColumn": 18,
                  "startLine": 216
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Calculate checksum\n        result = subprocess.run(\n            ['sha512sum', file_name],\n            stdout=subprocess.PIPE,\n            check=True,\n            text=True\n        )\n        calculated = result.stdout.split()[0]\n"
                  },
                  "endLine": 222,
                  "startLine": 215
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(cmd, check=True)\n"
                  },
                  "endColumn": 40,
                  "endLine": 318,
                  "startColumn": 9,
                  "startLine": 318
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        subprocess.run(cmd, check=True)\n\n"
                  },
                  "endLine": 319,
                  "startLine": 317
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 349,
                  "startColumn": 13,
                  "startLine": 348
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if package_manager == 'rpm':\n            subprocess.run(\n                [\"rpm\", \"-qa\", \"R7ScanAssistant\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n        else:  # deb\n"
                  },
                  "endLine": 354,
                  "startLine": 347
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 349,
                  "startColumn": 13,
                  "startLine": 348
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if package_manager == 'rpm':\n            subprocess.run(\n                [\"rpm\", \"-qa\", \"R7ScanAssistant\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n        else:  # deb\n"
                  },
                  "endLine": 354,
                  "startLine": 347
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 356,
                  "startColumn": 13,
                  "startLine": 355
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        else:  # deb\n            subprocess.run(\n                [\"dpkg-query\", \"-l\", \"r7scanassistant\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n\n"
                  },
                  "endLine": 361,
                  "startLine": 354
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            subprocess.run(\n"
                  },
                  "endColumn": 14,
                  "endLine": 356,
                  "startColumn": 13,
                  "startLine": 355
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        else:  # deb\n            subprocess.run(\n                [\"dpkg-query\", \"-l\", \"r7scanassistant\"],\n                check=True,\n                capture_output=True,\n                text=True\n            )\n\n"
                  },
                  "endLine": 361,
                  "startLine": 354
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 372,
                  "startColumn": 9,
                  "startLine": 371
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"pgrep\", \"-f\", \"ScanAssistant\"],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n        if ui:\n"
                  },
                  "endLine": 377,
                  "startLine": 370
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        subprocess.run(\n"
                  },
                  "endColumn": 10,
                  "endLine": 372,
                  "startColumn": 9,
                  "startLine": 371
                },
                "artifactLocation": {
                  "uri": "src/rapid7/tools/install_scan_assistant.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    try:\n        subprocess.run(\n            [\"pgrep\", \"-f\", \"ScanAssistant\"],\n            check=True,\n            capture_output=True,\n            text=True\n        )\n        if ui:\n"
                  },
                  "endLine": 377,
                  "startLine": 370
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'test_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    auth = InsightVMAuth(\n"
                  },
                  "endColumn": 6,
                  "endLine": 119,
                  "startColumn": 12,
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    auth = InsightVMAuth(\n        username=\"test_user\",\n        password=\"test_pass\",\n        base_url=\"https://test.insightvm.example.com:3780\"\n    )\n    return auth\n"
                  },
                  "endLine": 123,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert len(calls) > 0, f\"No {method} call to {expected_url} found\"\n"
                  },
                  "endColumn": 71,
                  "endLine": 238,
                  "startColumn": 5,
                  "startLine": 238
                },
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    assert len(calls) > 0, f\"No {method} call to {expected_url} found\"\n\n"
                  },
                  "endLine": 239,
                  "startLine": 237
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_headers.get(key) == value, f\"Header {key} != {value}\"\n"
                  },
                  "endColumn": 78,
                  "endLine": 244,
                  "startColumn": 13,
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for key, value in headers.items():\n            assert call_headers.get(key) == value, f\"Header {key} != {value}\"\n\n"
                  },
                  "endLine": 245,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.username == \"test_user\"\n"
                  },
                  "endColumn": 44,
                  "endLine": 20,
                  "startColumn": 9,
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        auth = InsightVMAuth()\n        assert auth.username == \"test_user\"\n        assert auth.password == \"test_pass\"\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.password == \"test_pass\"\n"
                  },
                  "endColumn": 44,
                  "endLine": 21,
                  "startColumn": 9,
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.username == \"test_user\"\n        assert auth.password == \"test_pass\"\n        assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'test_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.password == \"test_pass\"\n"
                  },
                  "endColumn": 44,
                  "endLine": 21,
                  "startColumn": 33,
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.username == \"test_user\"\n        assert auth.password == \"test_pass\"\n        assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endColumn": 74,
                  "endLine": 22,
                  "startColumn": 9,
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.password == \"test_pass\"\n        assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n        assert isinstance(auth.auth, HTTPBasicAuth)\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(auth.auth, HTTPBasicAuth)\n"
                  },
                  "endColumn": 52,
                  "endLine": 23,
                  "startColumn": 9,
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n        assert isinstance(auth.auth, HTTPBasicAuth)\n\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'custom_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        auth = InsightVMAuth(\n"
                  },
                  "endColumn": 10,
                  "endLine": 28,
                  "startColumn": 16,
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test initialization with explicit parameters.\"\"\"\n        auth = InsightVMAuth(\n            username=\"custom_user\",\n            password=\"custom_pass\",\n            base_url=\"https://custom.insightvm.example.com\"\n        )\n        assert auth.username == \"custom_user\"\n"
                  },
                  "endLine": 32,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.username == \"custom_user\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 32,
                  "startColumn": 9,
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert auth.username == \"custom_user\"\n        assert auth.password == \"custom_pass\"\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.password == \"custom_pass\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 33,
                  "startColumn": 9,
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.username == \"custom_user\"\n        assert auth.password == \"custom_pass\"\n        assert auth.base_url == \"https://custom.insightvm.example.com\"\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'custom_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.password == \"custom_pass\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 33,
                  "startColumn": 33,
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.username == \"custom_user\"\n        assert auth.password == \"custom_pass\"\n        assert auth.base_url == \"https://custom.insightvm.example.com\"\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://custom.insightvm.example.com\"\n"
                  },
                  "endColumn": 71,
                  "endLine": 34,
                  "startColumn": 9,
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.password == \"custom_pass\"\n        assert auth.base_url == \"https://custom.insightvm.example.com\"\n        assert isinstance(auth.auth, HTTPBasicAuth)\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(auth.auth, HTTPBasicAuth)\n"
                  },
                  "endColumn": 52,
                  "endLine": 35,
                  "startColumn": 9,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://custom.insightvm.example.com\"\n        assert isinstance(auth.auth, HTTPBasicAuth)\n\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert \"INSIGHTVM_API_USERNAME\" in str(exc_info.value)\n"
                  },
                  "endColumn": 67,
                  "endLine": 43,
                  "startColumn": 13,
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                InsightVMAuth()\n            assert \"INSIGHTVM_API_USERNAME\" in str(exc_info.value)\n\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert \"Missing InsightVM API credentials\" in str(exc_info.value)\n"
                  },
                  "endColumn": 78,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                InsightVMAuth()\n            assert \"Missing InsightVM API credentials\" in str(exc_info.value)\n\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endColumn": 78,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            auth = InsightVMAuth()\n            assert auth.base_url == \"https://test.insightvm.example.com:3780\"\n\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(auth.auth, HTTPBasicAuth)\n"
                  },
                  "endColumn": 52,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        auth = InsightVMAuth()\n        assert isinstance(auth.auth, HTTPBasicAuth)\n        # Can't directly test username/password without accessing private attrs\n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"InsightVMAuth\" in repr_str\n"
                  },
                  "endColumn": 43,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        repr_str = repr(auth)\n        assert \"InsightVMAuth\" in repr_str\n        assert \"test.insightvm.example.com\" in repr_str\n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"test.insightvm.example.com\" in repr_str\n"
                  },
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"InsightVMAuth\" in repr_str\n        assert \"test.insightvm.example.com\" in repr_str\n\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.api_key == \"test_platform_key\"\n"
                  },
                  "endColumn": 51,
                  "endLine": 82,
                  "startColumn": 9,
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        auth = PlatformAuth()\n        assert auth.api_key == \"test_platform_key\"\n        assert auth.base_url == \"https://us.api.insight.rapid7.com\"\n"
                  },
                  "endLine": 83,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://us.api.insight.rapid7.com\"\n"
                  },
                  "endColumn": 68,
                  "endLine": 83,
                  "startColumn": 9,
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.api_key == \"test_platform_key\"\n        assert auth.base_url == \"https://us.api.insight.rapid7.com\"\n\n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.api_key == \"custom_key\"\n"
                  },
                  "endColumn": 44,
                  "endLine": 91,
                  "startColumn": 9,
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert auth.api_key == \"custom_key\"\n        assert auth.base_url == \"https://custom.api.insight.rapid7.com\"\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.base_url == \"https://custom.api.insight.rapid7.com\"\n"
                  },
                  "endColumn": 72,
                  "endLine": 92,
                  "startColumn": 9,
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth.api_key == \"custom_key\"\n        assert auth.base_url == \"https://custom.api.insight.rapid7.com\"\n\n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert \"INSIGHT_PLATFORM_API_KEY\" in str(exc_info.value)\n"
                  },
                  "endColumn": 69,
                  "endLine": 100,
                  "startColumn": 13,
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                PlatformAuth()\n            assert \"INSIGHT_PLATFORM_API_KEY\" in str(exc_info.value)\n\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert headers == expected_headers\n"
                  },
                  "endColumn": 43,
                  "endLine": 113,
                  "startColumn": 9,
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert headers == expected_headers\n        assert headers[\"X-Api-Key\"] == \"test_platform_key\"\n"
                  },
                  "endLine": 114,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert headers[\"X-Api-Key\"] == \"test_platform_key\"\n"
                  },
                  "endColumn": 59,
                  "endLine": 114,
                  "startColumn": 9,
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert headers == expected_headers\n        assert headers[\"X-Api-Key\"] == \"test_platform_key\"\n        assert headers[\"Accept\"] == \"application/json\"\n"
                  },
                  "endLine": 115,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert headers[\"Accept\"] == \"application/json\"\n"
                  },
                  "endColumn": 55,
                  "endLine": 115,
                  "startColumn": 9,
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert headers[\"X-Api-Key\"] == \"test_platform_key\"\n        assert headers[\"Accept\"] == \"application/json\"\n\n"
                  },
                  "endLine": 116,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert headers[\"X-Api-Key\"] == \"custom_test_key\"\n"
                  },
                  "endColumn": 57,
                  "endLine": 121,
                  "startColumn": 9,
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        headers = auth.get_headers()\n        assert headers[\"X-Api-Key\"] == \"custom_test_key\"\n\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"PlatformAuth\" in repr_str\n"
                  },
                  "endColumn": 42,
                  "endLine": 127,
                  "startColumn": 9,
                  "startLine": 127
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        repr_str = repr(auth)\n        assert \"PlatformAuth\" in repr_str\n        assert \"us.api.insight.rapid7.com\" in repr_str\n"
                  },
                  "endLine": 128,
                  "startLine": 126
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"us.api.insight.rapid7.com\" in repr_str\n"
                  },
                  "endColumn": 55,
                  "endLine": 128,
                  "startColumn": 9,
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"PlatformAuth\" in repr_str\n        assert \"us.api.insight.rapid7.com\" in repr_str\n\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth.base_url.startswith(\"https://\")  # HTTPS URL indicates SSL usage\n"
                  },
                  "endColumn": 52,
                  "endLine": 141,
                  "startColumn": 9,
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        auth = InsightVMAuth()\n        assert auth.base_url.startswith(\"https://\")  # HTTPS URL indicates SSL usage\n\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'pass1'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        auth1 = InsightVMAuth(username=\"user1\", password=\"pass1\")\n"
                  },
                  "endColumn": 66,
                  "endLine": 145,
                  "startColumn": 17,
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test that multiple auth instances don't interfere.\"\"\"\n        auth1 = InsightVMAuth(username=\"user1\", password=\"pass1\")\n        auth2 = InsightVMAuth(username=\"user2\", password=\"pass2\")\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'pass2'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        auth2 = InsightVMAuth(username=\"user2\", password=\"pass2\")\n"
                  },
                  "endColumn": 66,
                  "endLine": 146,
                  "startColumn": 17,
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        auth1 = InsightVMAuth(username=\"user1\", password=\"pass1\")\n        auth2 = InsightVMAuth(username=\"user2\", password=\"pass2\")\n\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth1.username == \"user1\"\n"
                  },
                  "endColumn": 41,
                  "endLine": 148,
                  "startColumn": 9,
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert auth1.username == \"user1\"\n        assert auth2.username == \"user2\"\n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth2.username == \"user2\"\n"
                  },
                  "endColumn": 41,
                  "endLine": 149,
                  "startColumn": 9,
                  "startLine": 149
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth1.username == \"user1\"\n        assert auth2.username == \"user2\"\n        assert auth1.username != auth2.username\n"
                  },
                  "endLine": 150,
                  "startLine": 148
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth1.username != auth2.username\n"
                  },
                  "endColumn": 48,
                  "endLine": 150,
                  "startColumn": 9,
                  "startLine": 150
                },
                "artifactLocation": {
                  "uri": "tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth2.username == \"user2\"\n        assert auth1.username != auth2.username\n"
                  },
                  "endLine": 150,
                  "startLine": 149
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test_user\"\n"
                  },
                  "endColumn": 51,
                  "endLine": 19,
                  "startColumn": 9,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client = InsightVMClient()\n        assert client.auth.username == \"test_user\"\n        assert client.auth.password == \"test_pass\"\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"test_pass\"\n"
                  },
                  "endColumn": 51,
                  "endLine": 20,
                  "startColumn": 9,
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test_user\"\n        assert client.auth.password == \"test_pass\"\n        assert client.auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'test_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"test_pass\"\n"
                  },
                  "endColumn": 51,
                  "endLine": 20,
                  "startColumn": 40,
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test_user\"\n        assert client.auth.password == \"test_pass\"\n        assert client.auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endColumn": 81,
                  "endLine": 21,
                  "startColumn": 9,
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"test_pass\"\n        assert client.auth.base_url == \"https://test.insightvm.example.com:3780\"\n\n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'custom_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        client = InsightVMClient(\n"
                  },
                  "endColumn": 10,
                  "endLine": 26,
                  "startColumn": 18,
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test client initialization with explicit parameters.\"\"\"\n        client = InsightVMClient(\n            username=\"custom_user\",\n            password=\"custom_pass\",\n            base_url=\"https://custom.example.com\",\n            verify_ssl=False,\n            timeout=(5, 60)\n        )\n        assert client.auth.username == \"custom_user\"\n"
                  },
                  "endLine": 32,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"custom_user\"\n"
                  },
                  "endColumn": 53,
                  "endLine": 32,
                  "startColumn": 9,
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert client.auth.username == \"custom_user\"\n        assert client.auth.password == \"custom_pass\"\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"custom_pass\"\n"
                  },
                  "endColumn": 53,
                  "endLine": 33,
                  "startColumn": 9,
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"custom_user\"\n        assert client.auth.password == \"custom_pass\"\n        assert client.auth.base_url == \"https://custom.example.com\"\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'custom_pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"custom_pass\"\n"
                  },
                  "endColumn": 53,
                  "endLine": 33,
                  "startColumn": 40,
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"custom_user\"\n        assert client.auth.password == \"custom_pass\"\n        assert client.auth.base_url == \"https://custom.example.com\"\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.base_url == \"https://custom.example.com\"\n"
                  },
                  "endColumn": 68,
                  "endLine": 34,
                  "startColumn": 9,
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"custom_pass\"\n        assert client.auth.base_url == \"https://custom.example.com\"\n\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'assets')\n"
                  },
                  "endColumn": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check core API modules exist\n        assert hasattr(client, 'assets')\n        assert hasattr(client, 'asset_groups')\n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'asset_groups')\n"
                  },
                  "endColumn": 47,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'assets')\n        assert hasattr(client, 'asset_groups')\n        assert hasattr(client, 'sites')\n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'sites')\n"
                  },
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'asset_groups')\n        assert hasattr(client, 'sites')\n        assert hasattr(client, 'scans')\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'scans')\n"
                  },
                  "endColumn": 40,
                  "endLine": 44,
                  "startColumn": 9,
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'sites')\n        assert hasattr(client, 'scans')\n        assert hasattr(client, 'sonar_queries')\n"
                  },
                  "endLine": 45,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'sonar_queries')\n"
                  },
                  "endColumn": 48,
                  "endLine": 45,
                  "startColumn": 9,
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'scans')\n        assert hasattr(client, 'sonar_queries')\n        assert hasattr(client, 'reports')\n"
                  },
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'reports')\n"
                  },
                  "endColumn": 42,
                  "endLine": 46,
                  "startColumn": 9,
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'sonar_queries')\n        assert hasattr(client, 'reports')\n        assert hasattr(client, 'vulnerabilities')\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'vulnerabilities')\n"
                  },
                  "endColumn": 50,
                  "endLine": 47,
                  "startColumn": 9,
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'reports')\n        assert hasattr(client, 'vulnerabilities')\n        assert hasattr(client, 'solutions')\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'solutions')\n"
                  },
                  "endColumn": 44,
                  "endLine": 48,
                  "startColumn": 9,
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'vulnerabilities')\n        assert hasattr(client, 'solutions')\n\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(client.assets, AssetAPI)\n"
                  },
                  "endColumn": 51,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert isinstance(client.assets, AssetAPI)\n        assert isinstance(client.asset_groups, AssetGroupAPI)\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(client.asset_groups, AssetGroupAPI)\n"
                  },
                  "endColumn": 62,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(client.assets, AssetAPI)\n        assert isinstance(client.asset_groups, AssetGroupAPI)\n        assert isinstance(client.sites, SiteAPI)\n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(client.sites, SiteAPI)\n"
                  },
                  "endColumn": 49,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(client.asset_groups, AssetGroupAPI)\n        assert isinstance(client.sites, SiteAPI)\n\n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.assets.auth is client.auth\n"
                  },
                  "endColumn": 49,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # All API modules should have the same auth object\n        assert client.assets.auth is client.auth\n        assert client.asset_groups.auth is client.auth\n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.asset_groups.auth is client.auth\n"
                  },
                  "endColumn": 55,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.assets.auth is client.auth\n        assert client.asset_groups.auth is client.auth\n        assert client.sites.auth is client.auth\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.sites.auth is client.auth\n"
                  },
                  "endColumn": 48,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.asset_groups.auth is client.auth\n        assert client.sites.auth is client.auth\n\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client1 is not None\n"
                  },
                  "endColumn": 35,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Both should initialize successfully\n        assert client1 is not None\n        assert client2 is not None\n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client2 is not None\n"
                  },
                  "endColumn": 35,
                  "endLine": 81,
                  "startColumn": 9,
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client1 is not None\n        assert client2 is not None\n\n"
                  },
                  "endLine": 82,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client is not None\n"
                  },
                  "endColumn": 34,
                  "endLine": 88,
                  "startColumn": 9,
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # without accessing internal session timeout settings\n        assert client is not None\n\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"InsightVMClient\" in repr_str\n"
                  },
                  "endColumn": 45,
                  "endLine": 94,
                  "startColumn": 9,
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        repr_str = repr(client)\n        assert \"InsightVMClient\" in repr_str\n        assert \"test.insightvm.example.com\" in repr_str\n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"test.insightvm.example.com\" in repr_str\n"
                  },
                  "endColumn": 56,
                  "endLine": 95,
                  "startColumn": 9,
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"InsightVMClient\" in repr_str\n        assert \"test.insightvm.example.com\" in repr_str\n\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(client, InsightVMClient)\n"
                  },
                  "endColumn": 55,
                  "endLine": 100,
                  "startColumn": 13,
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with InsightVMClient() as client:\n            assert isinstance(client, InsightVMClient)\n            assert client.auth is not None\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert client.auth is not None\n"
                  },
                  "endColumn": 43,
                  "endLine": 101,
                  "startColumn": 13,
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert isinstance(client, InsightVMClient)\n            assert client.auth is not None\n\n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert \"Missing InsightVM API credentials\" in str(exc_info.value)\n"
                  },
                  "endColumn": 78,
                  "endLine": 108,
                  "startColumn": 13,
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                InsightVMClient()\n            assert \"Missing InsightVM API credentials\" in str(exc_info.value)\n\n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(client, InsightVMClient)\n"
                  },
                  "endColumn": 51,
                  "endLine": 117,
                  "startColumn": 9,
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client = create_client()\n        assert isinstance(client, InsightVMClient)\n\n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        client = create_client(\n"
                  },
                  "endColumn": 10,
                  "endLine": 122,
                  "startColumn": 18,
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test client creation with custom parameters.\"\"\"\n        client = create_client(\n            username=\"test\",\n            password=\"pass\",\n            base_url=\"https://example.com\",\n            verify_ssl=False\n        )\n        assert isinstance(client, InsightVMClient)\n"
                  },
                  "endLine": 127,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B106",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(client, InsightVMClient)\n"
                  },
                  "endColumn": 51,
                  "endLine": 127,
                  "startColumn": 9,
                  "startLine": 127
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert isinstance(client, InsightVMClient)\n        assert client.auth.username == \"test\"\n"
                  },
                  "endLine": 128,
                  "startLine": 126
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 128,
                  "startColumn": 9,
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(client, InsightVMClient)\n        assert client.auth.username == \"test\"\n        assert client.auth.password == \"pass\"\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"pass\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 129,
                  "startColumn": 9,
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test\"\n        assert client.auth.password == \"pass\"\n\n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'pass'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth.password == \"pass\"\n"
                  },
                  "endColumn": 46,
                  "endLine": 129,
                  "startColumn": 40,
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth.username == \"test\"\n        assert client.auth.password == \"pass\"\n\n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client1.auth.username == \"user1\"\n"
                  },
                  "endColumn": 48,
                  "endLine": 140,
                  "startColumn": 9,
                  "startLine": 140
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert client1.auth.username == \"user1\"\n        assert client2.auth.username == \"user2\"\n"
                  },
                  "endLine": 141,
                  "startLine": 139
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client2.auth.username == \"user2\"\n"
                  },
                  "endColumn": 48,
                  "endLine": 141,
                  "startColumn": 9,
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client1.auth.username == \"user1\"\n        assert client2.auth.username == \"user2\"\n        assert client1.auth.username != client2.auth.username\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client1.auth.username != client2.auth.username\n"
                  },
                  "endColumn": 62,
                  "endLine": 142,
                  "startColumn": 9,
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client2.auth.username == \"user2\"\n        assert client1.auth.username != client2.auth.username\n\n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"server1.example.com\" in client1.auth.base_url\n"
                  },
                  "endColumn": 62,
                  "endLine": 144,
                  "startColumn": 9,
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert \"server1.example.com\" in client1.auth.base_url\n        assert \"server2.example.com\" in client2.auth.base_url\n"
                  },
                  "endLine": 145,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"server2.example.com\" in client2.auth.base_url\n"
                  },
                  "endColumn": 62,
                  "endLine": 145,
                  "startColumn": 9,
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"server1.example.com\" in client1.auth.base_url\n        assert \"server2.example.com\" in client2.auth.base_url\n\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client.assets, 'list')\n"
                  },
                  "endColumn": 46,
                  "endLine": 153,
                  "startColumn": 9,
                  "startLine": 153
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # (even if they don't make real HTTP calls due to mocking)\n        assert hasattr(client.assets, 'list')\n        assert hasattr(client.sites, 'create')\n"
                  },
                  "endLine": 154,
                  "startLine": 152
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client.sites, 'create')\n"
                  },
                  "endColumn": 47,
                  "endLine": 154,
                  "startColumn": 9,
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client.assets, 'list')\n        assert hasattr(client.sites, 'create')\n        assert hasattr(client.scans, 'start_site_scan')\n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client.scans, 'start_site_scan')\n"
                  },
                  "endColumn": 56,
                  "endLine": 155,
                  "startColumn": 9,
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(client.sites, 'create')\n        assert hasattr(client.scans, 'start_site_scan')\n\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.auth is not None\n"
                  },
                  "endColumn": 39,
                  "endLine": 165,
                  "startColumn": 9,
                  "startLine": 165
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test client can be created and has expected structure\n        assert client.auth is not None\n        assert client.assets is not None\n"
                  },
                  "endLine": 166,
                  "startLine": 164
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.assets is not None\n"
                  },
                  "endColumn": 41,
                  "endLine": 166,
                  "startColumn": 9,
                  "startLine": 166
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.auth is not None\n        assert client.assets is not None\n        assert client.sites is not None\n"
                  },
                  "endLine": 167,
                  "startLine": 165
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.sites is not None\n"
                  },
                  "endColumn": 40,
                  "endLine": 167,
                  "startColumn": 9,
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "tests/test_client.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.assets is not None\n        assert client.sites is not None\n\n"
                  },
                  "endLine": 168,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.auth == mock_auth\n"
                  },
                  "endColumn": 37,
                  "endLine": 34,
                  "startColumn": 9,
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        api = AssetAPI(mock_auth)\n        assert api.auth == mock_auth\n        assert hasattr(api, 'get_all')  # Should have pagination method\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(api, 'get_all')  # Should have pagination method\n"
                  },
                  "endColumn": 39,
                  "endLine": 35,
                  "startColumn": 9,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert api.auth == mock_auth\n        assert hasattr(api, 'get_all')  # Should have pagination method\n\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_assets_list\n"
                  },
                  "endColumn": 42,
                  "endLine": 46,
                  "startColumn": 9,
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_assets_list\n        mock_get.assert_called_once_with('assets', params={'page': 0, 'size': 10})\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_asset_data\n"
                  },
                  "endColumn": 41,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_asset_data\n        assert result['id'] == 12345\n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['id'] == 12345\n"
                  },
                  "endColumn": 37,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == mock_asset_data\n        assert result['id'] == 12345\n        mock_get.assert_called_once_with('assets/12345')\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_asset_data\n"
                  },
                  "endColumn": 41,
                  "endLine": 71,
                  "startColumn": 9,
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_asset_data\n\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_asset_data\n"
                  },
                  "endColumn": 41,
                  "endLine": 83,
                  "startColumn": 9,
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_asset_data\n        mock_request.assert_called_once_with('PUT', f'assets/{asset_id}', json=update_data)\n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "endColumn": 30,
                  "endLine": 95,
                  "startColumn": 9,
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not crash and should return raw response\n        assert result is None\n        mock_request.assert_called_once()\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_assets_list\n"
                  },
                  "endColumn": 42,
                  "endLine": 113,
                  "startColumn": 9,
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_assets_list\n        mock_post.assert_called_once_with('assets/search', json=search_criteria)\n"
                  },
                  "endLine": 114,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(results) == 3\n"
                  },
                  "endColumn": 33,
                  "endLine": 137,
                  "startColumn": 9,
                  "startLine": 137
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert len(results) == 3\n        assert mock_list.call_count == 1  # Only one request needed\n"
                  },
                  "endLine": 138,
                  "startLine": 136
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_list.call_count == 1  # Only one request needed\n"
                  },
                  "endColumn": 41,
                  "endLine": 138,
                  "startColumn": 9,
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(results) == 3\n        assert mock_list.call_count == 1  # Only one request needed\n\n"
                  },
                  "endLine": 139,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(results) == 9  # 3 pages * 3 assets each\n"
                  },
                  "endColumn": 33,
                  "endLine": 167,
                  "startColumn": 9,
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should have fetched 3 pages with data\n        assert len(results) == 9  # 3 pages * 3 assets each\n        assert mock_list.call_count == 3\n"
                  },
                  "endLine": 168,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_list.call_count == 3\n"
                  },
                  "endColumn": 41,
                  "endLine": 168,
                  "startColumn": 9,
                  "startLine": 168
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(results) == 9  # 3 pages * 3 assets each\n        assert mock_list.call_count == 3\n\n"
                  },
                  "endLine": 169,
                  "startLine": 167
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_tags\n"
                  },
                  "endColumn": 35,
                  "endLine": 215,
                  "startColumn": 9,
                  "startLine": 215
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_tags\n        mock_get.assert_called_once_with(f'assets/{asset_id}/tags')\n"
                  },
                  "endLine": 216,
                  "startLine": 214
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"success\"] is True\n"
                  },
                  "endColumn": 41,
                  "endLine": 228,
                  "startColumn": 9,
                  "startLine": 228
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result[\"success\"] is True\n        mock_request.assert_called_once_with('PUT', f'assets/{asset_id}/tags', json={\"tag_ids\": tag_ids})\n"
                  },
                  "endLine": 229,
                  "startLine": 227
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"success\"] is True\n"
                  },
                  "endColumn": 41,
                  "endLine": 241,
                  "startColumn": 9,
                  "startLine": 241
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result[\"success\"] is True\n        mock_request.assert_called_once_with('DELETE', f'assets/{asset_id}/tags', params={\"tag_ids\": tag_ids})\n"
                  },
                  "endLine": 242,
                  "startLine": 240
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == mock_software\n"
                  },
                  "endColumn": 39,
                  "endLine": 269,
                  "startColumn": 9,
                  "startLine": 269
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == mock_software\n        mock_get.assert_called_once_with(f'assets/{asset_id}/software', params={'page': 0, 'size': 500})\n"
                  },
                  "endLine": 270,
                  "startLine": 268
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"success\"] is True\n"
                  },
                  "endColumn": 41,
                  "endLine": 290,
                  "startColumn": 9,
                  "startLine": 290
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result[\"success\"] is True\n        mock_request.assert_called_once_with('DELETE', 'assets', params={\"asset_ids\": asset_ids})\n"
                  },
                  "endLine": 291,
                  "startLine": 289
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'create')\n"
                  },
                  "endColumn": 45,
                  "endLine": 308,
                  "startColumn": 9,
                  "startLine": 308
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # For now, just test that the methods exist and have proper signatures\n        assert hasattr(assets_api, 'create')\n        assert hasattr(assets_api, 'get')\n"
                  },
                  "endLine": 309,
                  "startLine": 307
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'get')\n"
                  },
                  "endColumn": 42,
                  "endLine": 309,
                  "startColumn": 9,
                  "startLine": 309
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'create')\n        assert hasattr(assets_api, 'get')\n        assert hasattr(assets_api, 'update')\n"
                  },
                  "endLine": 310,
                  "startLine": 308
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'update')\n"
                  },
                  "endColumn": 45,
                  "endLine": 310,
                  "startColumn": 9,
                  "startLine": 310
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'get')\n        assert hasattr(assets_api, 'update')\n        assert hasattr(assets_api, 'delete')\n"
                  },
                  "endLine": 311,
                  "startLine": 309
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'delete')\n"
                  },
                  "endColumn": 45,
                  "endLine": 311,
                  "startColumn": 9,
                  "startLine": 311
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(assets_api, 'update')\n        assert hasattr(assets_api, 'delete')\n\n"
                  },
                  "endLine": 312,
                  "startLine": 310
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(assets_api.create)\n"
                  },
                  "endColumn": 43,
                  "endLine": 314,
                  "startColumn": 9,
                  "startLine": 314
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test method signature compatibility (would check in real integration test)\n        assert callable(assets_api.create)\n        assert callable(assets_api.get)\n"
                  },
                  "endLine": 315,
                  "startLine": 313
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(assets_api.get)\n"
                  },
                  "endColumn": 40,
                  "endLine": 315,
                  "startColumn": 9,
                  "startLine": 315
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert callable(assets_api.create)\n        assert callable(assets_api.get)\n        assert callable(assets_api.update)\n"
                  },
                  "endLine": 316,
                  "startLine": 314
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(assets_api.update)\n"
                  },
                  "endColumn": 43,
                  "endLine": 316,
                  "startColumn": 9,
                  "startLine": 316
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert callable(assets_api.get)\n        assert callable(assets_api.update)\n        assert callable(assets_api.delete)\n"
                  },
                  "endLine": 317,
                  "startLine": 315
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(assets_api.delete)\n"
                  },
                  "endColumn": 43,
                  "endLine": 317,
                  "startColumn": 9,
                  "startLine": 317
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_assets.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert callable(assets_api.update)\n        assert callable(assets_api.delete)\n"
                  },
                  "endLine": 317,
                  "startLine": 316
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.auth == mock_auth\n"
                  },
                  "endColumn": 37,
                  "endLine": 34,
                  "startColumn": 9,
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        api = BaseAPI(mock_auth)\n        assert api.auth == mock_auth\n        assert api.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.base_url == \"https://test.insightvm.example.com:3780\"\n"
                  },
                  "endColumn": 73,
                  "endLine": 35,
                  "startColumn": 9,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert api.auth == mock_auth\n        assert api.base_url == \"https://test.insightvm.example.com:3780\"\n        assert api.timeout == (10, 90)\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.timeout == (10, 90)\n"
                  },
                  "endColumn": 39,
                  "endLine": 36,
                  "startColumn": 9,
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert api.base_url == \"https://test.insightvm.example.com:3780\"\n        assert api.timeout == (10, 90)\n        assert api.verify_ssl == True  # Default from env var in conftest\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.verify_ssl == True  # Default from env var in conftest\n"
                  },
                  "endColumn": 38,
                  "endLine": 37,
                  "startColumn": 9,
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert api.timeout == (10, 90)\n        assert api.verify_ssl == True  # Default from env var in conftest\n\n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.verify_ssl == False\n"
                  },
                  "endColumn": 39,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        api = BaseAPI(mock_auth, verify_ssl=False)\n        assert api.verify_ssl == False\n\n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert api.timeout == custom_timeout\n"
                  },
                  "endColumn": 45,
                  "endLine": 48,
                  "startColumn": 9,
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        api = BaseAPI(mock_auth, timeout=custom_timeout)\n        assert api.timeout == custom_timeout\n\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert url == expected\n"
                  },
                  "endColumn": 31,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected = \"https://test.insightvm.example.com:3780/api/3/assets\"\n        assert url == expected\n\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert url == expected\n"
                  },
                  "endColumn": 31,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected = \"https://test.insightvm.example.com:3780/api/3/assets\"\n        assert url == expected\n\n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert url == expected\n"
                  },
                  "endColumn": 31,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected = \"https://test.insightvm.example.com:3780/api/3/assets/123/vulnerabilities\"\n        assert url == expected\n\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == {\"status\": \"success\", \"data\": []}\n"
                  },
                  "endColumn": 59,
                  "endLine": 75,
                  "startColumn": 9,
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result == {\"status\": \"success\", \"data\": []}\n        mock_request.assert_called_once()\n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'GET'  # method\n"
                  },
                  "endColumn": 40,
                  "endLine": 78,
                  "startColumn": 9,
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[0][0] == 'GET'  # method\n        assert 'https://test.insightvm.example.com:3780/api/3/test/endpoint' in call_args[0][1]  # url\n"
                  },
                  "endLine": 79,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'https://test.insightvm.example.com:3780/api/3/test/endpoint' in call_args[0][1]  # url\n"
                  },
                  "endColumn": 96,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'GET'  # method\n        assert 'https://test.insightvm.example.com:3780/api/3/test/endpoint' in call_args[0][1]  # url\n\n"
                  },
                  "endLine": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is mock_api_response  # Should return raw response\n"
                  },
                  "endColumn": 43,
                  "endLine": 88,
                  "startColumn": 9,
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        assert result is mock_api_response  # Should return raw response\n        mock_request.assert_called_once()\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['params'] == params\n"
                  },
                  "endColumn": 48,
                  "endLine": 100,
                  "startColumn": 9,
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[1]['params'] == params\n\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['json'] == json_data\n"
                  },
                  "endColumn": 49,
                  "endLine": 111,
                  "startColumn": 9,
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[1]['json'] == json_data\n\n"
                  },
                  "endLine": 112,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['headers'] == custom_headers\n"
                  },
                  "endColumn": 57,
                  "endLine": 122,
                  "startColumn": 9,
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[1]['headers'] == custom_headers\n\n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['auth'] == api_client.auth.auth\n"
                  },
                  "endColumn": 60,
                  "endLine": 132,
                  "startColumn": 9,
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[1]['auth'] == api_client.auth.auth\n        assert call_args[1]['verify'] == api_client.verify_ssl\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['verify'] == api_client.verify_ssl\n"
                  },
                  "endColumn": 63,
                  "endLine": 133,
                  "startColumn": 9,
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert call_args[1]['auth'] == api_client.auth.auth\n        assert call_args[1]['verify'] == api_client.verify_ssl\n        assert call_args[1]['timeout'] == api_client.timeout\n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['timeout'] == api_client.timeout\n"
                  },
                  "endColumn": 61,
                  "endLine": 134,
                  "startColumn": 9,
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert call_args[1]['verify'] == api_client.verify_ssl\n        assert call_args[1]['timeout'] == api_client.timeout\n\n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['timeout'] == custom_timeout\n"
                  },
                  "endColumn": 57,
                  "endLine": 145,
                  "startColumn": 9,
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_request.call_args\n        assert call_args[1]['timeout'] == custom_timeout\n\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is mock_api_response\n"
                  },
                  "endColumn": 47,
                  "endLine": 172,
                  "startColumn": 13,
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = api_client.get('assets')\n            assert result is mock_api_response\n\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is mock_api_response\n"
                  },
                  "endColumn": 47,
                  "endLine": 184,
                  "startColumn": 13,
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = api_client.post('assets', json=json_data)\n            assert result is mock_api_response\n\n"
                  },
                  "endLine": 185,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args[1]['json'] == json_data\n"
                  },
                  "endColumn": 53,
                  "endLine": 187,
                  "startColumn": 13,
                  "startLine": 187
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            call_args = mock_request.call_args\n            assert call_args[1]['json'] == json_data\n\n"
                  },
                  "endLine": 188,
                  "startLine": 186
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is mock_api_response\n"
                  },
                  "endColumn": 47,
                  "endLine": 196,
                  "startColumn": 13,
                  "startLine": 196
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = api_client.put('assets/123', json=json_data)\n            assert result is mock_api_response\n\n"
                  },
                  "endLine": 197,
                  "startLine": 195
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is mock_api_response\n"
                  },
                  "endColumn": 47,
                  "endLine": 204,
                  "startColumn": 13,
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = api_client.delete('assets/123')\n            assert result is mock_api_response\n\n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert result[\"status\"] == \"success\"\n"
                  },
                  "endColumn": 53,
                  "endLine": 233,
                  "startColumn": 17,
                  "startLine": 233
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                result = api_client._request(method, endpoint)\n                assert result[\"status\"] == \"success\"\n\n"
                  },
                  "endLine": 234,
                  "startLine": 232
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_request.call_count == 4\n"
                  },
                  "endColumn": 48,
                  "endLine": 236,
                  "startColumn": 13,
                  "startLine": 236
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should have made 4 separate calls\n            assert mock_request.call_count == 4\n\n"
                  },
                  "endLine": 237,
                  "startLine": 235
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert result == expected_data\n"
                  },
                  "endColumn": 47,
                  "endLine": 254,
                  "startColumn": 17,
                  "startLine": 254
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                result = api_client._request('GET', 'test')\n                assert result == expected_data\n\n"
                  },
                  "endLine": 255,
                  "startLine": 253
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is binary_response  # Should return raw response\n"
                  },
                  "endColumn": 45,
                  "endLine": 266,
                  "startColumn": 13,
                  "startLine": 266
                },
                "artifactLocation": {
                  "uri": "tests/test_rapid7/test_base.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = api_client._request('GET', 'reports/1/download', return_raw=True)\n            assert result is binary_response  # Should return raw response\n            # Should not call json() method for raw responses\n"
                  },
                  "endLine": 267,
                  "startLine": 265
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 5
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json"
}